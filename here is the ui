import SwiftUI

struct ContentView: View {
    let menuItems = ["Execution", "Settings", "Roblox"]
    @State private var hoveredItem: String?
    @State private var scriptText: String = ""
    
    var body: some View {
        NavigationView {
            List {
                Section(header: Text("MacScriptZ").font(.headline)) {
                    ForEach(menuItems, id: \.self) { item in
                        HStack {
                            Text(item)
                                .font(.system(size: 14))
                                .foregroundColor(hoveredItem == item ? .accentColor : .primary)
                            
                            Spacer()
                        }
                        .padding(.vertical, 8)
                        .background(hoveredItem == item ? Color.accentColor.opacity(0.1) : Color.clear)
                        .cornerRadius(5)
                        .scaleEffect(hoveredItem == item ? 1.02 : 1.0)
                        .onHover { hovering in
                            withAnimation(.easeInOut(duration: 0.2)) {
                                hoveredItem = hovering ? item : nil
                            }
                        }
                    }
                }
                
                Text("Offline")
                    .font(.caption)
                    .foregroundColor(.gray)
                    .padding(.top, 20)
            }
            .listStyle(SidebarListStyle())
            .frame(minWidth: 200, idealWidth: 200, maxWidth: 200)
            
            TextEditor(text: $scriptText)
                .font(.system(size: 14, design: .monospaced))
                .padding()
                .frame(minWidth: 400, idealWidth: 600, maxWidth: .infinity,
                       minHeight: 300, idealHeight: 400, maxHeight: .infinity)
                .overlay(
                    Group {
                        if scriptText.isEmpty {
                            Text("Enter script...")
                                .foregroundColor(.gray)
                                .font(.system(size: 14))
                                .padding(.leading, 5)
                                .frame(maxWidth: .infinity, maxHeight: .infinity, alignment: .topLeading)
                        }
                    }
                )
        }
        .navigationTitle("")
        .frame(minWidth: 600, minHeight: 400)
    }
}

struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}
